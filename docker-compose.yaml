services:
  mysql:
    container_name: 'efm-mysql'
    image: 'mysql:latest'
    restart: 'always'
    mem_limit: 512m
    mem_reservation: 256m
    cpus: 1.0
    networks:
      - my-networks
    environment:
      - 'MYSQL_DATABASE=mydb'
      - 'MYSQL_PASSWORD=secret'
      - 'MYSQL_ROOT_PASSWORD=verysecret'
      - 'MYSQL_USER=myuser'
    ports:
      - '3306:3306'
    volumes:
      - mysql_data:/var/lib/mysql
#  api:
#    container_name: 'efm-api'
#    build: .
#    mem_limit: 512m
#    mem_reservation: 256m
#    cpus: 1.0
#    restart:
#      on-failure:3
#    networks:
#      - my-networks
#    environment:
#      SPRING_DATASOURCE_URL: 'jdbc:mysql://mysql:3306/mydb'
#      SPRING_DATASOURCE_USERNAME: 'root'
#      SPRING_DATASOURCE_PASSWORD: 'verysecret'
#    ports:
#      - '8080:8080'
#    depends_on:
#      - mysql
  redis:
    image: redis:7
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      - my-networks
  minio:
    image: minio/minio
    container_name: minio
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin123
    volumes:
      - minio_data:/data
    ports:
      - "9000:9000"   # S3 API
      - "9001:9001"   # Painel web
    command: server --console-address ":9001" /data
    networks:
      - my-networks

  minio-init:
    image: minio/mc
    depends_on:
      - minio
    entrypoint: >
      /bin/sh -c "
      sleep 5;
      mc alias set myminio http://minio:9000 minioadmin minioadmin123;
      mc mb -p myminio/meu-bucket;
      mc policy set public myminio/meu-bucket;
      "
    networks:
      - my-networks

networks:
  my-networks:
    driver: bridge

volumes:
  mysql_data:
  minio_data: