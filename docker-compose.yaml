services:
  mysql:
    container_name: 'MYSQL'
    image: 'mysql:latest'
    restart: 'always'
    networks:
      - my-networks
    environment:
      - 'MYSQL_DATABASE=mydb'
      - 'MYSQL_PASSWORD=secret'
      - 'MYSQL_ROOT_PASSWORD=verysecret'
      - 'MYSQL_USER=myuser'
    ports:
      - '3306:3306'
  api:
    container_name: 'API'
    build: .
    restart:
      on-failure:3
    networks:
      - my-networks
    environment:
      SPRING_DATASOURCE_URL: 'jdbc:mysql://mysql:3306/mydb'
      SPRING_DATASOURCE_USERNAME: 'root'
      SPRING_DATASOURCE_PASSWORD: 'verysecret'
      ADDRESS_REDIS: 'redis://redis:6379'
      S3_URL: 'http://minio:9000'
      S3_BUCKET_NAME: 'meu-bucket'
      S3_REGION: 'sa-east-1'
      S3_ACCESS_KEY: 'minioadmin'
      S3_SECRET_KEY: 'minioadmin123'
    ports:
      - '8080:8080'
    depends_on:
      - mysql
      - minio
      - redis
      - minio-init
  redis:
    image: redis:7
    container_name: 'REDIS'
    depends_on:
      - mysql
    ports:
      - "6379:6379"
    networks:
      - my-networks
  minio:
    image: minio/minio
    container_name: 'S3'
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin123
    depends_on:
      - redis
    volumes:
      - minio_data:/data
    ports:
      - "9000:9000"   # S3 API
      - "9001:9001"   # Painel web
    command: server --console-address ":9001" /data
    networks:
      - my-networks

  minio-init:
    image: minio/mc
    container_name: 'S3_INIT'
    depends_on:
      - minio
    entrypoint: >
      /bin/sh -c "
      sleep 15;
      mc alias set myminio http://minio:9000 minioadmin minioadmin123;
      mc mb -p myminio/meu-bucket;
      mc anonymous set public myminio/meu-bucket; 
      "
    networks:
      - my-networks

networks:
  my-networks:
    driver: bridge

volumes:
  mysql_data:
  minio_data: